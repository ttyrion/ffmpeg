YUV是一种电视系统采用的颜色编码方法（颜色空间）。
现代彩色电视系统通常采用三管彩色摄影机或彩色CCD摄影机进行取像，然后把取得的彩色图像信号经分色、分别放大校正后得到RGB。
RGB再经过矩阵变换电路得到亮度信号Y和两个色差信号B－Y（即U）、R－Y（即V），最后发送端将亮度和色差三个信号(Y、U、V)分别进行编码，用同一信道发送出去。

——百度百科
"Y"表示明亮度（Luminance或Luma），也就是灰阶值；
"U"和"V" 表示的则是色度（Chrominance或Chroma：色调与饱和度），作用是描述影像色彩及饱和度，用于指定像素的颜色。
(知道为什么电视上图像设置里面有亮度和饱和度了?)
“亮度”是透过RGB输入信号来建立的，方法是将RGB信号的特定部分叠加到一起。
“色度”则定义了颜色的两个方面——色调与饱和度，分别用Cr（V）和Cb（U）来表示。其中，Cr（Red）反映了RGB输入信号红色部分与RGB信号亮度值之间的差异。
而CbRED（Blue）反映的是RGB输入信号蓝色部分与RGB信号亮度值之间的差异。

一、YUV的特点
1.1 与RGB视频信号传输相比，YUV最大的优点是只需占用极少的频宽（RGB要求三个独立的视频信号同时传输）。
1.2 YUV色彩空间的亮度信号Y和色度信号UV是分离的。
如果只有Y信号，而没有UV信号，则表示的图像是黑白灰度图像，彩色电视机采用YUV空间正是为了用亮度信号Y解决彩色电视机与黑白电视机的兼容问题，
使黑白电视机也能接收才是电视信号。

二、YUV的存储
首先：
YUV格式有两大类：planar和packed。
对于planar的YUV格式，先连续存储所有像素点的Y，紧接着存储所有像素点的U，随后是所有像素点的V。
对于packed的YUV格式，每个像素点的Y,U,V是连续交叉存储的。

2.1 YUV的存储格式与它的采样方式密切相关。
主流的采样方式有：YUV4:4:4，YUV4:2:2，YUV4:2:0这三种。
我们需要知道怎么根据采样方式（应该是存储格式）来从码流中还原每个像素点的YUV值，因为只有正确地还原了每个像素点的YUV值，才能通过YUV与RGB的
转换公式提取出每个像素点的RGB值，然后显示出来。

首先要清楚，上述YUV4:4:4，YUV4:2:2，YUV4:2:0分别怎么采样：
2.1 .1 YUV 4:4:4采样，每一个Y对应一组UV分量。
2.1 .2 YUV 4:2:2采样，每两个Y共用一组UV分量。
2.1 .3 YUV 4:2:0采样，每四个Y共用一组UV分量。
以上采样规律会影响我们怎么从码流中提取YUV分量。

2.2 YUV的存储方式
2.2.1 YUYV格式 （属于YUV422）
start + 0:       Y00     Cb00    Y01    Cr00     Y02     Cb01    Y03    Cr01
start + 8:       Y10     Cb10    Y11    Cr10     Y12     Cb11    Y13    Cr11
start + 16:      Y20     Cb20    Y21    Cr20     Y22     Cb21    Y23    Cr21

2.2.2 UYVY （属于YUV422）
UYVY格式，相对YUYV格式，只是调整了YU YV 的先后存储顺序而已。

2.2.3 YUV422P （属于YUV422）
YUV422P也属于YUV422的一种，它是一种planar模式，即平面模式，并不是将YUV数据交错存储，而是先存放所有的Y分量，然后存储所有的U（Cb）分量，最后存储所有的V（Cr）分量。

2.2.4 YU12、YV12格式（属于YUV420）
YU12和YV12属于YUV420格式，也是一种planar模式，将Y、U、V分量分别打包，依次存储。其每一个像素点的YUV数据提取遵循YUV420格式的提取方式，即4个Y分量共用一组UV。
YV12和I420都属于YUV420P格式（平面格式）。
但是二者不同：420格式和YV12格式的不同处在U平面和V平面的位置不同。在I420格式中，U平面紧跟在Y平面之后，然后才是V平面（即：YUV）；但YV12则是相反（即：YVU）。
I420: YYYYYYYY UU VV    =>YUV420P
YV12: YYYYYYYY VV UU    =>YUV420P
NV12: YYYYYYYY UVUV     =>YUV420SP
NV21: YYYYYYYY VUVU     =>YUV420SP

2.2.5 NV12、NV21（属于YUV420）
NV12和NV21属于YUV420格式，是一种two-plane模式，即Y和UV分为两个Plane，但是UV（CbCr）为交错存储，而不是分为三个plane。

举例计算YUV数据存储：
YUV420 planar数据， 以720×488大小图象YUV420 planar为例。
其存储大小为(720 * 480 * 3 >> 1)字节 (即，总共占3/2的Y分量大小)，如下：
Y分量：    (720 * 480)个字节
U(Cb)分量：(720 * 480 >> 2)个字节 (即，占四分之一的Y分量大小)
V(Cr)分量：(720 * 480 >> 2)个字节 (即，占四分之一的Y分量大小)

2.3 YUV422和YUV420转换
最简单的方式：
YUV4:2:2 —> YUV4:2:0 Y不变，将U和V信号值在行(垂直方向)在进行一次隔行抽样。
YUV4:2:0 —> YUV4:2:2 Y不变，将U和V信号值的每一行分别拷贝一份形成连续两行数据。

三、 数据采集与转码
直接采集到的视频数据是RGB24的格式，RGB24一帧的大小size＝width×heigth×3 Bit，RGB32的size＝width×heigth×4。
如果是I420（即YUV标准格式4：2：0）的数据量是 size＝width×heigth×1.5 Bit。所以如果是RGB24转换为YUV420，数据大小会减少一半。
在采集到RGB24数据后，需要对这个格式的数据进行第一次压缩。即将图像的颜色空间由RGB转为YUV。因为，X264在进行编码的时候需要标准的YUV（4：2：0）。
然后，经过X264编码后，数据量将大大减少。将编码后的数据打包，通过RTP实时传送。到达目的地后，将数据取出，进行解码。完成解码后，数据仍然是YUV格式的。
所以，还需要一次转换，这样windows的驱动才可以处理，就是YUV2RGB24。

3.1 YUV转RGB(这里是8-bit YUV 转成 RGB888)
转自：https://msdn.microsoft.com/en-us/library/ms893078.aspx
The following coefficients are used in conversion process:
C = Y - 16
D = U - 128
E = V - 128

Using the previous coefficients and noting that clip() denotes clipping a value to the range of 0 to 255, the following
formulas provide the conversion from YUV to RGB:
R = clip(( 298 * C           + 409 * E + 128) >> 8)
G = clip(( 298 * C - 100 * D - 208 * E + 128) >> 8)
B = clip(( 298 * C + 516 * D           + 128) >> 8)

These formulas use some coefficients that require more than 8 bits of precision to produce each 8-bit result, and
intermediate results require more than 16 bits of precision.

3.2 RGB888转YUV
The following formulas define the conversion from RGB to YUV:
Y = ( (  66 * R + 129 * G +  25 * B + 128) >> 8) +  16
U = ( ( -38 * R -  74 * G + 112 * B + 128) >> 8) + 128
V = ( ( 112 * R -  94 * G -  18 * B + 128) >> 8) + 128
These formulas produce 8-bit results using coefficients that require no more than 8 bits of (unsigned) precision.
Intermediate results require up to 16 bits of precision.